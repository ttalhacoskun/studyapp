import 'package:flutter/material.dart';
import 'package:smooth_page_indicator/smooth_page_indicator.dart';
import 'package:studyapp/info/age_select.dart';
import 'package:studyapp/info/loading.dart';
import 'package:studyapp/info/question_choice.dart';
import 'package:studyapp/info/reminder.dart';
import 'package:studyapp/info/subject_select.dart';
import 'package:studyapp/main_page.dart';

class OnboardingStepsPage extends StatefulWidget {
  @override
  _OnboardingStepsPageState createState() => _OnboardingStepsPageState();
}

class _OnboardingStepsPageState extends State<OnboardingStepsPage> {
  final PageController _pageController = PageController();
  int _currentPage = 0;

  // Variables to store user inputs
  int _selectedAge = 20;
  String _goal = 'Improve my grades';
  String _educationLevel = 'College/University';
  String _university = 'Harvard University';
  String _subject = 'Biology';
  String _reminderTime = '20:00';
  double _progress = 0.65;

  final List<Map<String, dynamic>> questions = [
    {
      'title': "What brings you here?",
      'subtitle': "Choose the reason that best describes why you're here.",
      'options': [
        'Improve my grades',
        'Prepare for exams',
        'Learn new subjects',
        'Supplement my studies',
        'Get organized for the semester',
        'Other'
      ],
      'selected': 'Improve my grades',
    }
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: Column(
          children: [
            Expanded(
              child: PageView.builder(
                controller: _pageController,
                itemCount: 5, // Adjusted for the correct number of steps (no page after loading)
                onPageChanged: (index) {
                  setState(() {
                    _currentPage = index;
                  });
                },
                itemBuilder: (context, index) {
                  // First page: Age Selection
                  if (index == 0) return AgeSelectionPage(_selectedAge, (age) {
                    setState(() {
                      _selectedAge = age;
                    });
                  });
                  // Second page: Subject Selection
                  if (index == 1)
                    return SubjectSelectionPage(_subject, (subject) {
                      setState(() {
                        _subject = subject;
                      });
                    });
                  // Third page: Question Choice
                  if (index == 2) {
                    return QuestionChoicePage(
                      title: questions[0]['title'],
                      subtitle: questions[0]['subtitle'],
                      options: questions[0]['options'],
                      selectedOption: questions[0]['selected'],
                      onOptionSelected: (value) {
                        setState(() {
                          questions[0]['selected'] = value;
                        });
                      },
                    );
                  }
                  // Fourth page: Reminder Selection
                  if (index == 3)
                    return ReminderSelectionPage(_reminderTime, (time) {
                      setState(() {
                        _reminderTime = time;
                      });
                    });
                  // Fifth (and final) page: Loading Screen
                  return LoadingScreen(_progress);
                },
              ),
            ),
            // Page indicator and button should always be visible, including on the first page
            SmoothPageIndicator(
              controller: _pageController,
              count: 5, // Adjusted for 5 steps
              effect: WormEffect(
                dotWidth: 10.0,
                dotHeight: 10.0,
                activeDotColor: Colors.teal,
              ),
            ),
            SizedBox(height: 20),
            // Continue button always visible
            Padding(
              padding: const EdgeInsets.symmetric(horizontal: 16.0),
              child: ElevatedButton(
                onPressed: () {
                  if (_currentPage < 4) {
                    _pageController.nextPage(
                      duration: Duration(milliseconds: 300),
                      curve: Curves.ease,
                    );
                  } else {
                    // Navigate to MainPage after the last page (loading page)
                    Navigator.pushReplacement(
                      context,
                      MaterialPageRoute(
                        builder: (context) => MainPage(),
                      ),
                    );
                  }
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.greenAccent,
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(20),
                  ),
                  padding: const EdgeInsets.symmetric(
                    horizontal: 40,
                    vertical: 15,
                  ),
                ),
                child: Text(
                  _currentPage < 4 ? "Continue" : "Finish",
                  style: const TextStyle(
                    color: Colors.black,
                    fontSize: 16,
                  ),
                ),
              ),
            ),
            SizedBox(height: 20),
          ],
        ),
      ),
    );
  }
}
